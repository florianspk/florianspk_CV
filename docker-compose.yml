version: '3.7'
services:
  cv:
    image: florianspk/florianspk_cv
    container_name: florianspk_cv
    restart: unless-stopped
    networks:
      - ${NETWORK}
    volumes:
      - ./:/usr/src/app
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.florianspk_cv.entrypoints=web,websecure"
      - "traefik.http.routers.florianspk_cv.rule=Host(`florianspk.fr`)"
      - "traefik.http.services.florianspk_cv.loadbalancer.server.port=8282"
      - "traefik.http.routers.florianspk_cv.tls=true"
      - "traefik.http.routers.florianspk_cv.tls.certresolver=leresolver"
  strapi:
    image: strapi/strapi
    container_name: strapi_cv
    networks:
      - ${NETWORK}
    environment:
      PGID: ${PGID}
      PUID: ${PUID}
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
    volumes:
      - ./app:/srv/app
    ports:
      - '1337:1337'
    depends_on:
      - postgres

  postgres:
    image: postgres
    container_name: postgres_cv
    networks:
      - ${NETWORK}
    environment:
      PGID: ${PGID}
      PUID: ${PUID}
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - ./data:/var/lib/postgresql/data

networks:
  traefik_network:
    external: true
