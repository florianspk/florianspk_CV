version: '3.7'
services:
  cv:
    image: florianspk/florianspk_cv
    container_name: florianspk_cv
    restart: unless-stopped
    networks:
      - ${NETWORK}
    volumes:
      - ./:/usr/src/app
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${NETWORK}"
      - "traefik.http.routers.florianspk_cv.entrypoints=web,websecure"
      - "traefik.http.routers.florianspk_cv.rule=Host(`florianspk.fr`)"
      - "traefik.http.services.florianspk_cv.loadbalancer.server.port=8282"
      - "traefik.http.routers.florianspk_cv.tls=true"
      - "traefik.http.routers.florianspk_cv.tls.certresolver=leresolver"
  strapi:
    container_name: strapi
    image: strapi/strapi
    environment:
      - NODE_ENV=production
      - DATABASE_CLIENT=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=strapi
      - DATABASE_USERNAME=strapi
      - DATABASE_PASSWORD=strapi
    ports:
      - 1337:1337
    volumes:
      - ./app:/srv/app
    depends_on:
      - db
    command: 'strapi start'

  db:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - ./app/strapi_cv/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
      POSTGRES_DB: strapi

networks:
  traefik_network:
    external: true
